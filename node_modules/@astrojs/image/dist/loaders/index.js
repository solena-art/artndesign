import { htmlColorNames } from "./colornames.js";
function isOutputFormat(value) {
  return ["avif", "jpeg", "png", "webp"].includes(value);
}
function isOutputFormatSupportsAlpha(value) {
  return ["avif", "png", "webp"].includes(value);
}
function isAspectRatioString(value) {
  return /^\d*:\d*$/.test(value);
}
function isColor(value) {
  return htmlColorNames.includes(value.toLowerCase()) || /^#[0-9a-f]{3}([0-9a-f]{3})?$/i.test(value) || /^rgb\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*\)$/i.test(value);
}
function parseAspectRatio(aspectRatio) {
  if (!aspectRatio) {
    return void 0;
  }
  if (typeof aspectRatio === "number") {
    return aspectRatio;
  } else {
    const [width, height] = aspectRatio.split(":");
    return parseInt(width) / parseInt(height);
  }
}
function isHostedService(service) {
  return "getImageSrc" in service;
}
function isSSRService(service) {
  return "transform" in service;
}
export {
  isAspectRatioString,
  isColor,
  isHostedService,
  isOutputFormat,
  isOutputFormatSupportsAlpha,
  isSSRService,
  parseAspectRatio
};
